name: Create Release Branch

on:
  push:
    tags:
      - "v*.*.*"

permissions:
    contents: write
    repository-projects: write
    

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install conventional-changelog-cli

      - name: Generate Release Notes
        id: release_notes
        run: |
          set -x  # Active le mode de débogage
        
          # Obtenir le dernier tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
          if [ -z "$LATEST_TAG" ]; then
            echo "Aucun tag trouvé, génération des notes depuis le début du projet"
            npx conventional-changelog-cli -p angular -r 0 > release_notes.md
          else
            echo "Dernier tag trouvé: $LATEST_TAG"
            # Générer les notes depuis le dernier tag
            npx conventional-changelog-cli -p angular -r 1 > release_notes.md
          fi
        
          echo "RELEASE_NOTES=$(cat release_notes.md)" >> $GITHUB_OUTPUT
        
          set +x  # Désactive le mode de débogage


      - name: Get tag
        id: tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: release_notes.md
          tag_name: ${{ steps.tag.outputs.TAG }}
          name: Release ${{ steps.tag.outputs.TAG }}
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Branch
        run: |
          git checkout -b release/${{ steps.tag.outputs.TAG }}
          git push origin release/${{ steps.tag.outputs.TAG }}
